@using WebGrease.Css.Extensions
@model  JobsPortal.PresentationLayer.Models.ApplyForJobModel

@{
                /**/

                ViewBag.Title = "JobOfferDetail";
                Layout = "~/Views/Shared/_Layout.cshtml";
}



@using (Html.BeginForm())
{
    <head>
        <meta name="viewport" content="width=device-width" />
        <title>@Model.JobOfferDto.Name</title>
    </head>
    <body>
        <div>
            <p>@Model.JobOfferDto.Name</p>
        </div>
        <table>


            <div>
                @{
        if (!Request.IsAuthenticated)
        {
            @Html.AntiForgeryToken()
            <div class="form-group">
                @Html.LabelFor(model => model.User.Login, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.User.Login, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.User.Login, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.User.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.User.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.User.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.User.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.User.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.User.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.User.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.User.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.User.LastName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.User.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.User.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.User.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.User.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.User.Phone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.User.Phone, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-8">
                @Html.LabelFor(model => model.User.Education, "Education:", new { @class = "control-label col-md-2" })
                <div class="col-md-6">
                    @Html.EnumDropDownListFor(model => model.User.Education)
                </div>
            </div>
}
            <p><font color="white">a</font></p>
            <p><font color="white">c</font></p>

            <div align="left">
                @{
        var i = 0;
        foreach (var item in
            Model.JobOfferDto.Questionnaire.Split('/'))
        {
            <p>@item @Html.EditorFor(model => model.Answers[i], new { htmlAttributes = new { @class = "form-control" } })</p>
            <br />
            i++;
        }
                }
            </div>
                }

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Apply" class="btn btn-default" />
                    </div>
                </div>
            </div>
        </table>
    </body>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}